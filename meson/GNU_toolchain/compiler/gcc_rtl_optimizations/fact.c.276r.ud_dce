
;; Function fact (fact, funcdef_no=23, decl_uid=2546, cgraph_uid=24, symbol_order=23)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 7 count 7 (  1.2)


fact

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={4d,2u} r19={1d,5u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={3d,2u} r84={2d,5u} 
;;    total ref usage 62{30d,32u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
;;  reg->defs[] map:	0[0,1] 1[2,2] 2[3,3] 4[4,4] 5[5,5] 6[6,6] 7[7,7] 16[8,8] 17[9,12] 19[13,13] 20[14,14] 21[15,15] 22[16,16] 23[17,17] 24[18,18] 25[19,19] 26[20,20] 27[21,21] 36[22,22] 37[23,23] 82[24,24] 83[25,27] 84[28,29] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(4){ }d5(5){ }d6(6){ }d7(7){ }d8(16){ }d13(19){ }d14(20){ }d15(21){ }d16(22){ }d17(23){ }d18(24){ }d19(25){ }d20(26){ }d21(27){ }d22(36){ }d23(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[2],2[3],4[4],5[5],6[6],7[7],16[8],19[13],20[14],21[15],22[16],23[17],24[18],25[19],26[20],27[21],36[22],37[23]
;; rd  kill	(20) 0[0,1],1[2],2[3],4[4],5[5],6[6],7[7],16[8],19[13],20[14],21[15],22[16],23[17],24[18],25[19],26[20],27[21],36[22],37[23]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(5) 5[5],6[6],7[7],16[8],19[13]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ d6(bb 0 insn -1) }u-1(7){ d7(bb 0 insn -1) }u-1(16){ d8(bb 0 insn -1) }u-1(19){ d13(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 83 84
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 17 [flags] 83 84
;; live  kill	
;; rd  in  	(5) 5[5],6[6],7[7],16[8],19[13]
;; rd  gen 	(3) 17[12],83[26],84[29]
;; rd  kill	(9) 17[9,10,11,12],83[25,26,27],84[28,29]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; rd  out 	(6) 6[6],7[7],16[8],19[13],83[26],84[29]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 16 { d8(bb 0 insn -1) }
;;   reg 19 { d13(bb 0 insn -1) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ d6(bb 0 insn -1) }u-1(7){ d7(bb 0 insn -1) }u-1(16){ d8(bb 0 insn -1) }u-1(19){ d13(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; live  gen 	 83
;; live  kill	
;; rd  in  	(6) 6[6],7[7],16[8],19[13],83[26],84[29]
;; rd  gen 	(1) 83[27]
;; rd  kill	(3) 83[25,26,27]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; rd  out 	(5) 6[6],7[7],16[8],19[13],83[27]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 16 { d8(bb 0 insn -1) }
;;   reg 19 { d13(bb 0 insn -1) }

( 2 4 )->[4]->( 5 4 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ d6(bb 0 insn -1) }u-1(7){ d7(bb 0 insn -1) }u-1(16){ d8(bb 0 insn -1) }u-1(19){ d13(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; lr  def 	 17 [flags] 82 83 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; live  gen 	 17 [flags] 82 83 84
;; live  kill	 17 [flags]
;; rd  in  	(10) 6[6],7[7],16[8],17[9],19[13],82[24],83[25,26],84[28,29]
;; rd  gen 	(4) 17[9],82[24],83[25],84[28]
;; rd  kill	(10) 17[9,10,11,12],82[24],83[25,26,27],84[28,29]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; rd  out 	(6) 6[6],7[7],16[8],19[13],83[25],84[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 16 { d8(bb 0 insn -1) }
;;   reg 19 { d13(bb 0 insn -1) }

( 3 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ d6(bb 0 insn -1) }u-1(7){ d7(bb 0 insn -1) }u-1(16){ d8(bb 0 insn -1) }u-1(19){ d13(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(7) 6[6],7[7],16[8],19[13],83[25,27],84[28]
;; rd  gen 	(1) 0[0]
;; rd  kill	(2) 0[0,1]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(5) 0[0],6[6],7[7],16[8],19[13]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 16 { d8(bb 0 insn -1) }
;;   reg 19 { d13(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ d0(bb 5 insn 27) }u-1(6){ d6(bb 0 insn -1) }u-1(7){ d7(bb 0 insn -1) }u-1(19){ d13(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[6],7[7],16[8],19[13]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 5 insn 27) }
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 19 { d13(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 22 to worklist
  Adding insn 28 to worklist
Finished finding needed instructions:
  Adding insn 27 to worklist
Processing use of (reg 83 [ <retval> ]) in insn 27:
  Adding insn 4 to worklist
  Adding insn 19 to worklist
Processing use of (reg 82 [ n ]) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 83 [ <retval> ]) in insn 19:
  Adding insn 5 to worklist
Processing use of (reg 84 [ n ]) in insn 17:
  Adding insn 2 to worklist
  Adding insn 18 to worklist
Processing use of (reg 84 [ n ]) in insn 18:
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 84 [ n ]) in insn 4:
Processing use of (reg 0 ax) in insn 28:
Processing use of (reg 17 flags) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 84 [ n ]) in insn 21:
Processing use of (reg 17 flags) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 84 [ n ]) in insn 10:
starting the processing of deferred insns
ending the processing of deferred insns


fact

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={4d,2u} r19={1d,5u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={3d,2u} r84={2d,5u} 
;;    total ref usage 62{30d,32u,0e} in 12{12 regular + 0 call} insns.
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v:SI 84 [ n ])
        (reg:SI 5 di [ n ])) "fact.c":3:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ n ])
        (nil)))
(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 3 10 2 (set (reg:SI 83 [ <retval> ])
        (const_int 1 [0x1])) "fact.c":4:5 75 {*movsi_internal}
     (nil))
(insn 10 5 11 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 84 [ n ])
            (const_int 1 [0x1]))) "fact.c":4:5 11 {*cmpsi_1}
     (nil))
(jump_insn 11 10 30 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 15)
            (pc))) "fact.c":4:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 15)
(note 30 11 4 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 4 30 15 3 (set (reg:SI 83 [ <retval> ])
        (reg/v:SI 84 [ n ])) "fact.c":4:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 84 [ n ])
        (nil)))
      ; pc falls through to BB 5
(code_label 15 4 16 4 2 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/v:SI 82 [ n ])
        (reg/v:SI 84 [ n ])) 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg/v:SI 84 [ n ])
                (plus:SI (reg/v:SI 84 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fact.c":5:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 21 4 (parallel [
            (set (reg:SI 83 [ <retval> ])
                (mult:SI (reg:SI 83 [ <retval> ])
                    (reg/v:SI 82 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg/v:SI 82 [ n ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 84 [ n ])
            (const_int 1 [0x1]))) "fact.c":4:5 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 26)
            (pc))) "fact.c":4:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 26)
      ; pc falls through to BB 4
(code_label 26 22 29 5 1 (nil) [1 uses])
(note 29 26 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 29 28 5 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "fact.c":6:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ <retval> ])
        (nil)))
(insn 28 27 0 5 (use (reg/i:SI 0 ax)) "fact.c":6:1 -1
     (nil))

;; Function main (main, funcdef_no=24, decl_uid=2548, cgraph_uid=25, symbol_order=24) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 7 (  1.2)


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d,1u} r18={1d} r19={1d,5u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={2d,3u} r84={2d,2u} r86={1d,1u} 
;;    total ref usage 134{100d,34u,0e} in 15{14 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93
;;  reg->defs[] map:	0[0,3] 1[4,6] 2[7,8] 4[9,11] 5[12,14] 6[15,15] 7[16,16] 8[17,17] 9[18,18] 10[19,19] 11[20,20] 12[21,21] 13[22,22] 14[23,23] 15[24,24] 16[25,25] 17[26,29] 18[30,30] 19[31,31] 20[32,33] 21[34,35] 22[36,37] 23[38,39] 24[40,41] 25[42,43] 26[44,45] 27[46,47] 28[48,48] 29[49,49] 30[50,50] 31[51,51] 32[52,52] 33[53,53] 34[54,54] 35[55,55] 36[56,57] 37[58,59] 38[60,60] 39[61,61] 44[62,62] 45[63,63] 46[64,64] 47[65,65] 48[66,66] 49[67,67] 50[68,68] 51[69,69] 52[70,70] 53[71,71] 54[72,72] 55[73,73] 56[74,74] 57[75,75] 58[76,76] 59[77,77] 60[78,78] 61[79,79] 62[80,80] 63[81,81] 64[82,82] 65[83,83] 66[84,84] 67[85,85] 68[86,86] 69[87,87] 70[88,88] 71[89,89] 72[90,90] 73[91,91] 74[92,92] 75[93,93] 82[94,94] 83[95,96] 84[97,98] 86[99,99] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d11(4){ }d14(5){ }d15(6){ }d16(7){ }d25(16){ }d31(19){ }d33(20){ }d35(21){ }d37(22){ }d39(23){ }d41(24){ }d43(25){ }d45(26){ }d47(27){ }d57(36){ }d59(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[6],2[8],4[11],5[14],6[15],7[16],16[25],19[31],20[33],21[35],22[37],23[39],24[41],25[43],26[45],27[47],36[57],37[59]
;; rd  kill	(39) 0[0,1,2,3],1[4,5,6],2[7,8],4[9,10,11],5[12,13,14],6[15],7[16],16[25],19[31],20[32,33],21[34,35],22[36,37],23[38,39],24[40,41],25[42,43],26[44,45],27[46,47],36[56,57],37[58,59]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(4) 6[15],7[16],16[25],19[31]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ d15(bb 0 insn -1) }u-1(7){ d16(bb 0 insn -1) }u-1(16){ d25(bb 0 insn -1) }u-1(19){ d31(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 83 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 83 84
;; live  kill	
;; rd  in  	(4) 6[15],7[16],16[25],19[31]
;; rd  gen 	(2) 83[96],84[98]
;; rd  kill	(4) 83[95,96],84[97,98]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; rd  out 	(6) 6[15],7[16],16[25],19[31],83[96],84[98]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d15(bb 0 insn -1) }
;;   reg 7 { d16(bb 0 insn -1) }
;;   reg 16 { d25(bb 0 insn -1) }
;;   reg 19 { d31(bb 0 insn -1) }

( 4 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ d15(bb 0 insn -1) }u-1(7){ d16(bb 0 insn -1) }u-1(16){ d25(bb 0 insn -1) }u-1(19){ d31(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 86
;; live  kill	
;; rd  in  	(6) 6[15],7[16],16[25],19[31],83[95],84[97]
;; rd  gen 	(2) 0[1],86[99]
;; rd  kill	(5) 0[0,1,2,3],86[99]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(4) 6[15],7[16],16[25],19[31]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d15(bb 0 insn -1) }
;;   reg 7 { d16(bb 0 insn -1) }
;;   reg 16 { d25(bb 0 insn -1) }
;;   reg 19 { d31(bb 0 insn -1) }

( 2 4 )->[4]->( 3 4 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ d15(bb 0 insn -1) }u-1(7){ d16(bb 0 insn -1) }u-1(16){ d25(bb 0 insn -1) }u-1(19){ d31(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; lr  def 	 17 [flags] 82 83 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; live  gen 	 17 [flags] 82 83 84
;; live  kill	 17 [flags]
;; rd  in  	(10) 6[15],7[16],16[25],17[26],19[31],82[94],83[95,96],84[97,98]
;; rd  gen 	(4) 17[26],82[94],83[95],84[97]
;; rd  kill	(9) 17[26,27,28,29],82[94],83[95,96],84[97,98]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; rd  out 	(6) 6[15],7[16],16[25],19[31],83[95],84[97]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d15(bb 0 insn -1) }
;;   reg 7 { d16(bb 0 insn -1) }
;;   reg 16 { d25(bb 0 insn -1) }
;;   reg 19 { d31(bb 0 insn -1) }

( 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ d15(bb 0 insn -1) }u-1(7){ d16(bb 0 insn -1) }u-1(16){ d25(bb 0 insn -1) }u-1(19){ d31(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(4) 6[15],7[16],16[25],19[31]
;; rd  gen 	(1) 0[0]
;; rd  kill	(4) 0[0,1,2,3]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(5) 0[0],6[15],7[16],16[25],19[31]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d15(bb 0 insn -1) }
;;   reg 7 { d16(bb 0 insn -1) }
;;   reg 16 { d25(bb 0 insn -1) }
;;   reg 19 { d31(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ d0(bb 5 insn 31) }u-1(6){ d15(bb 0 insn -1) }u-1(7){ d16(bb 0 insn -1) }u-1(19){ d31(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[15],7[16],16[25],19[31]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 5 insn 31) }
;;   reg 6 { d15(bb 0 insn -1) }
;;   reg 7 { d16(bb 0 insn -1) }
;;   reg 19 { d31(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 26 to worklist
  Adding insn 32 to worklist
Finished finding needed instructions:
  Adding insn 31 to worklist
Processing use of (reg 0 ax) in insn 32:
Processing use of (reg 17 flags) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 83 [ _6 ]) in insn 25:
  Adding insn 22 to worklist
Processing use of (reg 83 [ _6 ]) in insn 22:
  Adding insn 4 to worklist
Processing use of (reg 7 sp) in insn 15:
Processing use of (reg 0 ax) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 1 dx) in insn 15:
  Adding insn 10 to worklist
Processing use of (reg 4 si) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 5 di) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 86) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 84 [ mult_acc_7 ]) in insn 10:
  Adding insn 23 to worklist
Processing use of (reg 82 [ n ]) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 84 [ mult_acc_7 ]) in insn 23:
  Adding insn 3 to worklist
Processing use of (reg 83 [ _6 ]) in insn 21:
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d,1u} r18={1d} r19={1d,5u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={2d,3u} r84={2d,2u} r86={1d,1u} 
;;    total ref usage 134{100d,34u,0e} in 15{14 regular + 1 call} insns.
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 4 2 (set (reg:SI 84 [ mult_acc_7 ])
        (const_int 1 [0x1])) "fact.c":8:12 75 {*movsi_internal}
     (nil))
(insn 4 3 24 2 (set (reg/v:SI 83 [ _6 ])
        (const_int 10 [0xa])) "fact.c":8:12 75 {*movsi_internal}
     (nil))
      ; pc falls through to BB 4
(code_label 24 4 9 3 13 (nil) [1 uses])
(note 9 24 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:SI 1 dx)
        (reg:SI 84 [ mult_acc_7 ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ mult_acc_7 ])
        (nil)))
(insn 11 10 12 3 (set (reg/f:DI 86)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fc4d8987cf0 *.LC0>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 74 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 4 si)
        (reg/f:DI 86)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fc4d8987cf0 *.LC0>)
            (nil))))
(insn 13 12 14 3 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 77 {*movqi_internal}
     (nil))
(call_insn 15 14 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fc4d8888c00 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fc4d8888c00 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
      ; pc falls through to BB 5
(code_label 19 15 20 4 12 (nil) [0 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/v:SI 82 [ n ])
        (reg/v:SI 83 [ _6 ])) 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg/v:SI 83 [ _6 ])
                (plus:SI (reg/v:SI 83 [ _6 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fact.c":5:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 25 4 (parallel [
            (set (reg:SI 84 [ mult_acc_7 ])
                (mult:SI (reg:SI 84 [ mult_acc_7 ])
                    (reg/v:SI 82 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg/v:SI 82 [ n ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 23 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 83 [ _6 ])
            (const_int 1 [0x1]))) "fact.c":4:5 11 {*cmpsi_1}
     (nil))
(jump_insn 26 25 33 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "fact.c":4:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 132709668 (nil)))
 -> 24)
      ; pc falls through to BB 4
(note 33 26 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 33 32 5 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "fact.c":11:1 75 {*movsi_internal}
     (nil))
(insn 32 31 0 5 (use (reg/i:SI 0 ax)) "fact.c":11:1 -1
     (nil))
