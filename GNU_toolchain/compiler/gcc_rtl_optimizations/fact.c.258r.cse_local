
;; Function fact (fact, funcdef_no=23, decl_uid=2546, cgraph_uid=24, symbol_order=23)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)


fact

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,7u} r7={1d,7u} r16={1d,6u} r17={4d,2u} r19={1d,7u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={3d,2u} r84={2d,5u} 
;;    total ref usage 70{30d,40u,0e} in 12{12 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(19){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(36){ }d-1(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 84
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 17 [flags] 84
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; live  gen 	 83
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; live  gen 	 83
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84

( 4 7 )->[5]->( 8 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; lr  def 	 17 [flags] 82 83 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; live  gen 	 17 [flags] 82 83 84
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84

( 5 )->[7]->( 5 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84

( 3 5 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(6){ }u-1(7){ }u-1(19){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 22 to worklist
  Adding insn 28 to worklist
Finished finding needed instructions:
processing block 8 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
  Adding insn 27 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
  Adding insn 4 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84
  Adding insn 5 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
  Adding insn 10 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 10 (  1.2)
;; Following path with 3 sets: 2 
;; Following path with 1 sets: 4 
;; Following path with 7 sets: 5 
;; Following path with 1 sets: 3 
;; Following path with 2 sets: 8 
starting the processing of deferred insns
ending the processing of deferred insns


fact

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,7u} r7={1d,7u} r16={1d,6u} r17={4d,2u} r19={1d,7u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={3d,2u} r84={2d,5u} 
;;    total ref usage 70{30d,40u,0e} in 12{12 regular + 0 call} insns.
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v:SI 84 [ n ])
        (reg:SI 5 di [ n ])) "fact.c":3:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ n ])
        (nil)))
(note 3 2 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 11 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 84 [ n ])
            (const_int 1 [0x1]))) "fact.c":4:5 11 {*cmpsi_1}
     (nil))
(jump_insn 11 10 30 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 32)
            (pc))) "fact.c":4:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 32)
(note 30 11 4 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 4 30 32 3 (set (reg:SI 83 [ <retval> ])
        (reg/v:SI 84 [ n ])) "fact.c":4:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 84 [ n ])
        (nil)))
      ; pc falls through to BB 8
(code_label 32 4 31 4 4 (nil) [1 uses])
(note 31 32 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 31 15 4 (set (reg:SI 83 [ <retval> ])
        (const_int 1 [0x1])) "fact.c":4:5 75 {*movsi_internal}
     (nil))
(code_label 15 5 16 5 2 (nil) [0 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg/v:SI 82 [ n ])
        (reg/v:SI 84 [ n ])) 75 {*movsi_internal}
     (nil))
(insn 18 17 19 5 (parallel [
            (set (reg/v:SI 84 [ n ])
                (plus:SI (reg/v:SI 84 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fact.c":5:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 21 5 (parallel [
            (set (reg:SI 83 [ <retval> ])
                (mult:SI (reg:SI 83 [ <retval> ])
                    (reg/v:SI 82 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg/v:SI 82 [ n ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 19 22 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 84 [ n ])
            (const_int 1 [0x1]))) "fact.c":4:5 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 25 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 26)
            (pc))) "fact.c":4:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 26)
(note 25 22 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
      ; pc falls through to BB 5
(code_label 26 25 29 8 1 (nil) [1 uses])
(note 29 26 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 27 29 28 8 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "fact.c":6:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ <retval> ])
        (nil)))
(insn 28 27 0 8 (use (reg/i:SI 0 ax)) "fact.c":6:1 -1
     (nil))
