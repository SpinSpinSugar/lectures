
;; Function fact (fact, funcdef_no=23, decl_uid=2546, cgraph_uid=24, symbol_order=23)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 5 4 6
;;
;; Loop 1
;;  header 4, latch 6
;;  depth 1, outer 0
;;  nodes: 4 6
;; 2 succs { 3 5 }
;; 3 succs { 1 }
;; 5 succs { 4 }
;; 4 succs { 3 6 }
;; 6 succs { 4 }
int fact (int n)
{
  int _1;
  int mult_acc_6;
  int mult_acc_13;
  int prephitmp_14;

  <bb 2> [local count: 118111600]:
  if (n_4(D) <= 1)
    goto <bb 3>; [11.00%]
  else
    goto <bb 5>; [89.00%]

  <bb 3> [local count: 118111600]:
  # prephitmp_14 = PHI <mult_acc_6(4), n_4(D)(2)>
  return prephitmp_14;

  <bb 5> [local count: 105119324]:

  <bb 4> [local count: 955630225]:
  # n_10 = PHI <_1(6), n_4(D)(5)>
  # mult_acc_13 = PHI <mult_acc_6(6), 1(5)>
  _1 = n_10 + -1;
  mult_acc_6 = n_10 * mult_acc_13;
  if (_1 == 1)
    goto <bb 3>; [11.00%]
  else
    goto <bb 6>; [89.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 4>; [100.00%]

}



;; Function main (main, funcdef_no=24, decl_uid=2548, cgraph_uid=25, symbol_order=24) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 5 4
;;
;; Loop 1
;;  header 4, latch 5
;;  depth 1, outer 0
;;  nodes: 4 5
;; 2 succs { 4 }
;; 3 succs { 1 }
;; 5 succs { 4 }
;; 4 succs { 3 5 }
/usr/include/x86_64-linux-gnu/bits/stdio2.h:112: __printf_chk: objsize = 9223372036854775807, fmtstr = "%d
"
  Directive 1 at offset 0: "%d"
    Result: 1, 10, 10, 10 (1, 10, 10, 10)
  Directive 2 at offset 2: "
", length = 1
    Result: 1, 1, 1, 1 (2, 11, 11, 11)
  Directive 3 at offset 3: "", length = 1

int main ()
{
  int n;
  int _6;
  int mult_acc_7;
  int mult_acc_12;

  <bb 2> [local count: 118111600]:
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 118111600]:
  __printf_chk (1, "%d\n", mult_acc_7);
  return 0;

  <bb 5> [local count: 837518624]:

  <bb 4> [local count: 955630225]:
  # n_11 = PHI <_6(5), 10(2)>
  # mult_acc_12 = PHI <mult_acc_7(5), 1(2)>
  _6 = n_11 + -1;
  mult_acc_7 = n_11 * mult_acc_12;
  if (_6 == 1)
    goto <bb 3>; [12.36%]
  else
    goto <bb 5>; [87.64%]

}


